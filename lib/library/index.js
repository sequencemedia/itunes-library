"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.toM3U=toM3U;exports.transform=exports.playlists=exports.tracks=void 0;var _os=_interopRequireDefault(require("os"));var _path=_interopRequireDefault(require("path"));var _sacredFs=require("sacred-fs");var _debug=_interopRequireDefault(require("debug"));var itunesLibraryParser=_interopRequireWildcard(require("@sequencemedia/itunes-library-parser"));var _=require("./..");var _tracks=_interopRequireWildcard(require("./tracks"));exports.tracks=_tracks;var _playlists=_interopRequireWildcard(require("./playlists"));exports.playlists=_playlists;var _transform=_interopRequireWildcard(require("./transform"));exports.transform=_transform;function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const{library:{toM3U:parseToM3U}}=itunesLibraryParser;const error=(0,_debug.default)('itunes-library:error');function listenerFactory({xml,statsMap,parse=()=>{},jar,destination}){return async function(eventType){if(eventType==='change'){try{const stats=await(0,_sacredFs.stat)(xml);if((0,_.hasChanges)(stats,statsMap)){(0,_.putChanges)(stats,statsMap);await parse(jar,xml,destination);}}catch({message}){error(message);}}};}async function toM3U(jar,xml,destination=''){let watcher;try{const stats=await(0,_sacredFs.stat)(xml);const statsMap=new Map();(0,_.putChanges)(stats,statsMap);const destinationForM3Us=destination?_path.default.resolve(destination.replace('~',_os.default.homedir)):destination;await parseToM3U(jar,xml,destinationForM3Us);const listener=listenerFactory({jar,xml,statsMap,parse:parseToM3U,destination:destinationForM3Us});watcher=await(0,_sacredFs.watch)(xml,{encoding:'utf8'},listener);watcher.on('error',({message})=>{error('Error in watcher',message);});}catch({message}){if(watcher)watcher.close();error(message);}}